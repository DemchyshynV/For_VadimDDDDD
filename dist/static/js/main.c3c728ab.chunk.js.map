{"version":3,"sources":["components/user/UserServices.js","components/group/GroupServices.js","components/user/GroupName.js","components/user/UserComponent.js","components/group/GroupComponent.js","components/user/CreateUser.js","components/user/UpdateUser.js","components/group/CreateGroup.js","components/group/UpdateGroup.js","App.js","reportWebVitals.js","index.js"],"names":["UserService","url","axios","get","this","username","password","group","user","post","id","patch","delete","GroupServices","name","description","catch","put","GroupName","props","useState","groups","setGroups","item","filter","value","userService","deleteUser","a","then","r","console","log","data","useEffect","getGroup","res","to","onClick","UserComponent","state","users","groupService","getUsers","setState","map","Component","GroupComponent","deleteGroup","alert","CreateUser","setUsername","setGroup","groupId","setGroupId","createUser","onChange","event","target","type","placeholder","e","UpdateUser","userId","useParams","updateUser","CreateGroup","setName","setDescription","createGroup","UpdateGroup","updateGroup","App","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3c728ab.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default class UserService {\n\n    url = 'http://127.0.0.1:8000/users'\n\n    getUsers() {\n        return axios.get(this.url);\n    }\n\n    createUser(username, password, group,) {\n        const user = { username, password: password, group: group}\n        return axios.post(this.url, user);\n    }\n\n    updateUser(username, password, group, id) {\n        const user = {username, password, group}\n        return axios.patch(`${this.url}/${id}/update`, user);\n    }\n\n    deleteUser(id) {\n        return axios.delete(`${this.url}/${id}/delete`);\n    }\n\n}\n;","import axios from 'axios'\n\nexport default class GroupServices {\n\n    url = 'http://127.0.0.1:8000/groups'\n\n    getGroup() {\n        return axios.get(this.url);\n    }\n\n    createGroup(name, description) {\n        return axios.post(this.url, {\n            name: name,\n            description: description\n        }).catch();\n    }\n\n    updateGroup(name, description, id) {\n        return axios.put(`${this.url}/${id}/update`,{name: name, description: description});\n    }\n\n    deleteGroup(id) {\n        return axios.delete(`${this.url}/${id}/delete`);\n    }\n}\n;","import React, {useEffect, useState} from 'react';\nimport {Link} from \"react-router-dom\";\nimport UserService from \"./UserServices\";\nimport GroupServices from \"../group/GroupServices\";\n\nfunction GroupName(props) {\n    const [groups, setGroups] = useState([])\n    const {item} = props\n    const group = groups.filter(value =>value.id === item.group)\n    const userService = new UserService()\n    const deleteUser = async (id) =>  await userService.deleteUser(id).then(r => console.log(r.data));\n\n\n    useEffect(() => {\n        new GroupServices().getGroup()\n            .then(res => setGroups(res.data));\n    },[])\n\n        return (\n            <div>\n            <div>{item.id} {item.username} {group.name}</div>\n                <Link to={`user/${item.id}/update`}>\n                         <button>edit</button>\n                     </Link>\n                     <button onClick={() => deleteUser(item.id)}>delete</button>\n            </div>\n        );\n    }\n\n\nexport default GroupName;","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom'\n\nimport UserService from \"./UserServices\";\nimport GroupServices from \"../group/GroupServices\";\nimport GroupName from \"./GroupName\";\n// export const {Consumer, Provider} = React.createContext();\nclass UserComponent extends Component {\n    state = {users: [], groups: []};\n    userService = new UserService();\n    groupService = new GroupServices();\n\n    componentDidMount() {\n        this.userService.getUsers()\n            .then(res => {\n                const users = res.data;\n                this.setState({users})\n            })\n        this.groupService.getGroup()\n            .then(res => {\n                const groups = res.data;\n                this.setState({groups})\n            })\n    }\n    // group = () => this.state.groups.filter(value => )\n\n\n\n    render() {\n        const {users} = this.state;\n        return (\n            <div>\n                <Link to={'/user/create'}>\n                    <button>Add User</button>\n                </Link>\n                    {users.map(value => <GroupName item={value} key={value.id}/>)}\n\n\n\n            </div>\n        );\n    }\n}\n\nexport default UserComponent;","import React, {Component} from 'react';\nimport GroupServices from \"./GroupServices\";\nimport {Link} from \"react-router-dom\";\n\n\nclass GroupComponent extends Component {\n    state = {groups: []};\n    groupService = new GroupServices();\n\n    componentDidMount() {\n        this.groupService.getGroup()\n            .then(res => {\n                const groups = res.data;\n                this.setState({groups})\n            })\n    }\n\n    deleteGroup = async (id) => {\n        try {\n            await this.groupService.deleteGroup(id)\n        } catch (er) {\n            alert('спочатку видали користувачів з цієї групи')\n        }\n    }\n\n\n    render() {\n        const {groups} = this.state\n        return (\n            <div>\n                <Link to={'/group/create'}>\n                    <button>Add Group</button>\n                </Link>\n                {groups.map(value => (<div>{value.id} {value.name} {value.description}\n                    <Link to={`group/${value.id}/update`}>\n                        <button>edit</button>\n                    </Link>\n                    <button onClick={() => this.deleteGroup(value.id)}>delete</button>\n                </div>))}\n            </div>\n        );\n    }\n}\n\nexport default GroupComponent;","import React, {useEffect, useState} from 'react';\nimport GroupServices from \"../group/GroupServices\";\nimport UserService from \"./UserServices\";\nimport {Link} from 'react-router-dom'\n\nfunction CreateUser()  {\n    const [username, setUsername] = useState('');\n    const [group, setGroup] = useState();\n    const [password] = useState('password');\n    // const [groupError, setGroupError] = useState('');\n    const [groups, setGroups] = useState([]);\n    // const [groupDirty, setGroupDirty] = useState(false);\n    const [groupId, setGroupId] = useState();\n\n    // const blurHandler = (e) => e.target ? setGroupDirty(true) : setGroupDirty(false);\n\n\n    const usernameHandler = (e) => setUsername(e.target.value);\n\n    const groupHandler = (e) => {\n        setGroup(e.target.value);\n\n        groups.filter(value => {\n            if (value.name === e.target.value) {\n                setGroupId(value.id)\n            }\n        })\n    }\n\n\n\n    useEffect(() => {\n        new GroupServices().getGroup()\n            .then(res => setGroups(res.data));\n    }, []);\n\n    const createUser = async () => {\n        new UserService().createUser(username, password, groupId).then(res => console.log(res));\n    }\n\n    return (\n        <div>\n            <form>\n\n                <label>Enter your username<input onChange={event => usernameHandler(event)} value={username} type=\"text\"\n                                                 placeholder={'...'}/></label>\n                <label> select your group <select value={group} onChange={event => groupHandler(event)}>{groups.map(value => (\n                    <option value={value.name}>{value.name}</option>))}</select>\n                </label>\n\n            </form>\n            <Link to={'/users'}>\n                <button onClick={() => createUser()} type={\"submit\"}>add user</button>\n            </Link>\n        </div>\n    );\n}\n\n\nexport default CreateUser;","import React, {useState, useEffect} from 'react';\nimport GroupServices from \"../group/GroupServices\";\nimport UserService from \"./UserServices\";\nimport {Link, useParams} from \"react-router-dom\";\n\nfunction UpdateUser() {\n    const [username, setUsername] = useState('');\n    const [group, setGroup] = useState();\n    const [password] = useState('password');\n    // const [groupError, setGroupError] = useState('');\n    const [groups, setGroups] = useState([]);\n    // const [groupDirty, setGroupDirty] = useState(false);\n    const [groupId, setGroupId] = useState();\n    const {userId} = useParams()\n\n    // const blurHandler = (e) => e.target ? setGroupDirty(true) : setGroupDirty(false);\n\n    const usernameHandler = (e) => setUsername(e.target.value);\n\n    const groupHandler = (e) => {\n        console.log(e.target.value)\n        setGroup(e.target.value);\n        groups.filter(value => {\n            if (value.name === e.target.value) {\n                setGroupId(value.id)\n            }\n        })\n    }\n\n\n    // const passwordHandler = (e) => setPassword(e.target.value);\n\n    useEffect(() => {\n        new GroupServices().getGroup()\n            .then(res => setGroups(res.data));\n        new UserService().getUsers()\n            .then(res => console.log(res.data));\n    }, []);\n\n    const updateUser = () => {\n        new UserService().updateUser(username, password, groupId, userId).then(res => console.log(res));\n    }\n    return (\n        <div>\n            <form>\n\n                <label>Enter your username<input onChange={event => usernameHandler(event)} value={username} type=\"text\"\n                                                 placeholder={'...'}/></label>\n                {/*{(groupError && groupDirty) && (<div>{groupError}</div>)}*/}\n                {/*<input onBlur={event => blurHandler(event)} onChange={event => groupHandler(event)} value={group}*/}\n                {/*       placeholder={'Enter your group...'} type=\"text\"/>*/}\n                <label>select your group <select value={group} onChange={event => groupHandler(event)}>{groups.map(value => (\n                    <option value={value.name}>{value.name}</option>))}</select>\n                </label>\n                {/*<input onChange={event => passwordHandler(event)} value={password}*/}\n                {/*       placeholder={'Enter your password...'} type=\"password\"/>*/}\n\n            </form>\n            <Link to={'/users'}>\n                <button onClick={() => updateUser()} type={\"submit\"}>save user</button>\n            </Link>\n        </div>\n    );\n}\n\nexport default UpdateUser;","import React, {useState} from 'react';\nimport GroupServices from \"../group/GroupServices\";\nimport {Link} from 'react-router-dom'\n\nfunction CreateGroup()  {\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState();\n\n    const nameHandler = (e) => setName(e.target.value);\n\n    const descriptionHandler = (e) => setDescription(e.target.value);\n\n\n    const createGroup = async () => {\n        new GroupServices().createGroup(name, description).then(res => console.log(res));\n    }\n\n    return (\n        <div>\n            <form>\n\n                <label>Enter group name<input onChange={event => nameHandler(event)} value={name} type=\"text\"\n                                                 placeholder={'...'}/></label>\n                <label>Enter group`s description<input onChange={event => descriptionHandler(event)} value={description} type=\"text\"\n                                                 placeholder={'...'}/></label>\n\n            </form>\n            <Link to={'/groups'}>\n                <button onClick={() => createGroup()} type={\"submit\"}>add group</button>\n            </Link>\n        </div>\n    );\n}\n\n\nexport default CreateGroup;","import React, {useState} from 'react';\nimport GroupServices from \"../group/GroupServices\";\nimport {Link, useParams} from 'react-router-dom'\n\nfunction UpdateGroup()  {\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState();\n    const {groupId} = useParams()\n    const nameHandler = (e) => setName(e.target.value);\n\n    const descriptionHandler = (e) => setDescription(e.target.value);\n\n\n    const updateGroup = async () => {\n        new GroupServices().updateGroup(name, description, groupId).then(res => console.log(res));\n    }\n\n    return (\n        <div>\n            <form>\n\n                <label>Enter group name<input onChange={event => nameHandler(event)} value={name} type=\"text\"\n                                                 placeholder={'...'}/></label>\n                <label>Enter group`s description<input onChange={event => descriptionHandler(event)} value={description} type=\"text\"\n                                                 placeholder={'...'}/></label>\n\n            </form>\n            <Link to={'/groups'}>\n                <button onClick={() => updateGroup()} type={\"submit\"}>save group</button>\n            </Link>\n        </div>\n    );\n}\n\n\nexport default UpdateGroup;","import React, {Component} from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\n\nimport UserComponent from \"./components/user/UserComponent\";\nimport GroupComponent from \"./components/group/GroupComponent\";\nimport CreateUser from \"./components/user/CreateUser\";\nimport UpdateUser from \"./components/user/UpdateUser\";\nimport CreateGroup from \"./components/group/CreateGroup\";\nimport UpdateGroup from \"./components/group/UpdateGroup\";\n\n\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n                <div>\n                    <ul>\n                        <li><Link to={'/users'}>Users</Link></li>\n                        <li><Link to={'/groups'}>Group</Link></li>\n                    </ul>\n                </div>\n                <Switch>\n                    <Route path={'/users'} render={(props) => {\n                        return <UserComponent/>\n                    }}/>\n                    <Route path={'/user/create'} render={(props) => {\n                        return <CreateUser/>\n                    }}/>\n                    <Route path={'/user/:userId/update'} render={(props) => {\n                        return <UpdateUser/>\n                    }}/>\n                    <Route path={'/groups'} render={(props) => {\n                        return <GroupComponent/>\n                    }}/>\n                    <Route path={'/group/create'} render={(props) => {\n                        return <CreateGroup/>\n                    }}/>\n                    <Route path={'/group/:groupId/update'} render={(props) => {\n                        return <UpdateGroup/>\n                    }}/>\n\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}